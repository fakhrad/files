version: "3.8"
services:
  rabbitmq:
    image: "library/rabbitmq"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    ports:
    - 4369
    - 5671
    - 5672
    - 25672
    - 15671
    - 15672
    networks: 
      - hcms
    tty: true
  contentdb:
    image: "mongo"
    environment:
      MONGO_INITDB_DATABASE: contents
    volumes: 
      - ./content-volume:/data/db
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks: 
      - hcms
  assetsdb:
    image: "mongo"
    environment:
      MONGO_INITDB_DATABASE: files
    volumes: 
      - ./files-volume:/data/db
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks: 
      - hcms
  authdb:
    image: "mongo"
    environment:
      MONGO_INITDB_DATABASE: authdb
    volumes: 
      - ./auth-volume:/data/db
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks: 
      - hcms
  contentDelivery:
    image: "cda:latest"
    environment:
      RABBITMQ_HOST: amqp://rabbitmq:5672
      CONTENT_DB_URL: mongodb://contentdb:27017/contents
      PORT: 80
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    ports:
      - 80
    tty: true
    depends_on:
      - rabbitmq
    networks: 
      - hcms
    command: npm start
  contentService:
    image: "content:latest"
    environment:
      RABBITMQ_HOST: amqp://rabbitmq:5672
      CONTENT_DB_URL: mongodb://contentdb:27017/content-db
      PORT: 80
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    ports:
      - "80"
    tty: true
    depends_on:
      - rabbitmq
    networks: 
      - hcms
    command: npm start
  authservice:
    image: "oauth:latest"
    environment:
      RABBITMQ_HOST: amqp://rabbitmq:5672
      DATABASE_URL: mongodb://authdb:27017/authdb
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    depends_on:
       - rabbitmq
       - authdb
    tty: true
    command: npm start
    networks: 
      - hcms
  assets:
    image: "assets:latest"
    environment:
      RABBITMQ_HOST: amqp://rabbitmq:5672
      DATABASE_URL: mongodb://contentdb:27017/contents
      AUTHDB_URL: mongodb://authdb:27017/authdb
      FILEDB_URL: mongodb://assetsdb:27017/files
      PORT: 80
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    depends_on:
        - rabbitmq
    ports:
      - "8012:80"
    tty: true
    command: npm start
    networks:  
      - hcms
  admin-api:
    image: "admin-api:latest"
    environment:
      RABBITMQ_HOST: amqp://rabbitmq:5672
      PORT: 80
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    ports:
      - "8013:80"
    tty: true
    depends_on:
      - rabbitmq    
    networks: 
      - hcms
    command: npm start
  hcms:
    image: hcms
    environment:
      REACT_APP_APPS_BASE_URL: http://localhost:8013
      REACT_APP_SPACE_BASE_URL: http://localhost:8013
      REACT_APP_CONTENTS_BASE_URL: http://localhost:8013
      REACT_APP_CATEGORIES_BASE_URL: http://localhost:8013
      REACT_APP_CONTENT_TYPE_BASE_URL: http://localhost:8013
      REACT_APP_ASSET_BASE_URL: http://localhost:8013
      REACT_APP_DOWNLOAD_FILE_BASE_URL: http://localhost:8012
      REACT_APP_ACCOUNT_BASE_URL: http://localhost:8013
      REACT_APP_BASE_URL: http://localhost:8013
      REACT_APP_DATA_DEFAULT_LANG: fa
    volumes:
      - './:/app'
      - '/app/node_modules'
    ports:
      - 80:3000
    stdin_open: true
    command: npm start
networks: 
  hcms:
    external: false
    driver: overlay
volumes:
  content-volume:
  files-volume:
  auth-volume: